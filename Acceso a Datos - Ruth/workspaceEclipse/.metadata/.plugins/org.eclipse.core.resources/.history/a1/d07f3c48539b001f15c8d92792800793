

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;

/**
 * Servlet implementation class Ejercicio1
 */
@WebServlet("/Ejercicio1")
public class Ejercicio1 extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private HashMap<String, String> notificaciones;

    @Override
    public void init() throws ServletException {
        // Cargar las tareas desde el archivo al iniciar la aplicación
        notificaciones = cargarTareas("tareas.ser");
        getServletContext().setAttribute("notificaciones", notificaciones);
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String idTarea = request.getParameter("idTarea");
        String descripcion = request.getParameter("descripcion");

        if (idTarea != null && descripcion != null) {
            notificaciones.put(idTarea, descripcion);
            getServletContext().setAttribute("notificaciones", notificaciones);
        }

        response.setContentType("text/html");
        PrintWriter out = response.getWriter();
        out.println("<html><body>");
        out.println("<h1>Tareas</h1>");
        for (String key : notificaciones.keySet()) {
            out.println("<p>" + key + ": " + notificaciones.get(key) + "</p>");
        }
        out.println("</body></html>");
    }

    @Override
    public void destroy() {
        // Guardar las tareas en el archivo al detener la aplicación
        guardarTareas("tareas.ser", notificaciones);
    }

    private void guardarTareas(String fichero, HashMap<String, String> tareas) {
        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(fichero))) {
            oos.writeObject(tareas);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private HashMap<String, String> cargarTareas(String fichero) {
        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(fichero))) {
            return (HashMap<String, String>) ois.readObject();
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
            return new HashMap<>();
        }
    }
}
